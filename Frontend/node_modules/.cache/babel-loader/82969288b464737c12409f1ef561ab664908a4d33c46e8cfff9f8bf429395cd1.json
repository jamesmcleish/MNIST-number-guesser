{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmcleish/projects/MNIST-number-guesser/frontend/src/components/PencilTool/PencilTool.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar pos = {\n  x: 0,\n  y: 0\n};\nconst Penciltool = () => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const contextRef = useRef(null);\n  useLayoutEffect(() => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 10;\n    contextRef.current = ctx;\n    lines.forEach(line => {\n      line.points.forEach((point, index) => {\n        if (index === 0) {\n          contextRef.current.moveTo(point.x, point.y);\n        } else {\n          contextRef.current.lineTo(point.x, point.y);\n        }\n      });\n      contextRef.current.stroke();\n    });\n  }, [lines]);\n  const startDrawing = event => {\n    setDrawing(true);\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top; // Adjust y coordinate based on canvas position\n\n    setLines(prevLines => [...prevLines, {\n      points: [pos]\n    }]);\n  };\n  const finishDrawing = () => {\n    setDrawing(false);\n  };\n  const draw = event => {\n    if (!drawing) return;\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top; // Adjust y coordinate based on canvas position\n\n    setLines(prevLines => {\n      const lastLine = prevLines[prevLines.length - 1];\n      const newPoints = [...lastLine.points, pos];\n      const newLines = [...prevLines];\n      newLines[newLines.length - 1] = {\n        points: newPoints\n      };\n      return newLines;\n    });\n    contextRef.current.lineTo(pos.x, pos.y);\n    contextRef.current.stroke();\n  };\n  const convertToCSV = () => {\n    let csvContent = 'x,y\\n';\n    lines.forEach(line => {\n      line.points.forEach(point => {\n        csvContent += `${point.x},${point.y}\\n`;\n      });\n    });\n\n    // Create a temporary element to download the CSV file\n    const element = document.createElement('a');\n    element.href = URL.createObjectURL(new Blob([csvContent], {\n      type: 'text/csv'\n    }));\n    element.download = 'drawing.csv';\n    element.click();\n  };\n  {\n    con;\n  }\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\",\n    width: 280,\n    height: 280,\n    onMouseDown: startDrawing,\n    onMouseUp: finishDrawing,\n    onMouseMove: draw,\n    children: \"Canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Penciltool, \"aS9tEa2GUMDmgJPTYfffyZ/6Svc=\");\n_c = Penciltool;\nexport default {\n  Penciltool\n};\nvar _c;\n$RefreshReg$(_c, \"Penciltool\");","map":{"version":3,"names":["React","useLayoutEffect","useState","useRef","jsxDEV","_jsxDEV","pos","x","y","Penciltool","_s","lines","setLines","drawing","setDrawing","contextRef","canvas","document","getElementById","ctx","getContext","fillStyle","clearRect","width","height","lineCap","strokeStyle","lineWidth","current","forEach","line","points","point","index","moveTo","lineTo","stroke","startDrawing","event","clientX","clientY","rect","getBoundingClientRect","left","top","prevLines","finishDrawing","draw","lastLine","length","newPoints","newLines","convertToCSV","csvContent","element","createElement","href","URL","createObjectURL","Blob","type","download","click","con","id","onMouseDown","onMouseUp","onMouseMove","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jamesmcleish/projects/MNIST-number-guesser/frontend/src/components/PencilTool/PencilTool.js"],"sourcesContent":["import React, { useLayoutEffect, useState, useRef } from 'react';\n\nvar pos = { x: 0, y: 0 };\n\nconst Penciltool = () => {\n  const [lines, setLines] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const contextRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n\n    ctx.fillStyle = 'white';\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 10;\n    contextRef.current = ctx;\n\n    lines.forEach((line) => {\n      line.points.forEach((point, index) => {\n        if (index === 0) {\n          contextRef.current.moveTo(point.x, point.y);\n        } else {\n          contextRef.current.lineTo(point.x, point.y);\n        }\n      });\n      contextRef.current.stroke();\n    });\n  }, [lines]);\n\n  const startDrawing = (event) => {\n    setDrawing(true);\n    const { clientX, clientY } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top;  // Adjust y coordinate based on canvas position\n\n    setLines((prevLines) => [...prevLines, { points: [pos] }]);\n  };\n\n  const finishDrawing = () => {\n    setDrawing(false);\n  };\n\n  const draw = (event) => {\n    if (!drawing) return;\n\n    const { clientX, clientY } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top;  // Adjust y coordinate based on canvas position\n\n    setLines((prevLines) => {\n      const lastLine = prevLines[prevLines.length - 1];\n      const newPoints = [...lastLine.points, pos];\n      const newLines = [...prevLines];\n      newLines[newLines.length - 1] = { points: newPoints };\n      return newLines;\n    });\n\n    contextRef.current.lineTo(pos.x, pos.y);\n    contextRef.current.stroke();\n  };\n\n  const convertToCSV = () => {\n    let csvContent = 'x,y\\n';\n\n    lines.forEach((line) => {\n      line.points.forEach((point) => {\n        csvContent += `${point.x},${point.y}\\n`;\n      });\n    });\n\n    // Create a temporary element to download the CSV file\n    const element = document.createElement('a');\n    element.href = URL.createObjectURL(new Blob([csvContent], { type: 'text/csv' }));\n    element.download = 'drawing.csv';\n    element.click();\n  };\n\n  {con}\n\n  return (\n    <canvas\n      id='canvas'\n      width={280}\n      height={280}\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={draw}\n    >\n      Canvas\n    </canvas>\n  );\n};\n\nexport default {Penciltool};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}