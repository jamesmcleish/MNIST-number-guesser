{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmcleish/projects/MNIST-number-guesser/frontend/src/components/PencilTool/PencilTool.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar pos = {\n  x: 0,\n  y: 0\n};\nconst Penciltool = () => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const contextRef = useRef(null);\n  useLayoutEffect(() => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'black';\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 45;\n    contextRef.current = ctx;\n    lines.forEach(line => {\n      line.points.forEach((point, index) => {\n        if (index === 0) {\n          contextRef.current.moveTo(point.x, point.y);\n        } else {\n          contextRef.current.lineTo(point.x, point.y);\n        }\n      });\n      contextRef.current.stroke();\n    });\n  }, [lines]);\n  const startDrawing = event => {\n    setDrawing(true);\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top; // Adjust y coordinate based on canvas position\n\n    setLines(prevLines => [...prevLines, {\n      points: [pos]\n    }]);\n  };\n  const finishDrawing = () => {\n    setDrawing(false);\n  };\n  const draw = event => {\n    if (!drawing) return;\n    const {\n      clientX,\n      clientY\n    } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top; // Adjust y coordinate based on canvas position\n\n    setLines(prevLines => {\n      const lastLine = prevLines[prevLines.length - 1];\n      const newPoints = [...lastLine.points, pos];\n      const newLines = [...prevLines];\n      newLines[newLines.length - 1] = {\n        points: newPoints\n      };\n      return newLines;\n    });\n    contextRef.current.lineTo(pos.x, pos.y);\n    contextRef.current.stroke();\n  };\n  function convertCanvasToImageArray(canvas) {\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height).data;\n    const imageArray = [];\n    for (let i = 0; i < imageData.length; i += 4) {\n      const r = imageData[i];\n      const g = imageData[i + 1];\n      const b = imageData[i + 2];\n      const grayscale = Math.round(0.2989 * r + 0.587 * g + 0.114 * b);\n      imageArray.push(grayscale / 255);\n    }\n    return rmesizedIageArray;\n  }\n  useEffect(() => {\n    const handleMouseUp = () => {\n      const canvas = document.getElementById('canvas');\n      const imageArray = convertCanvasToImageArray(canvas);\n      console.log(imageArray[0]);\n      fetch('http://127.0.0.1:5000', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          csvData: imageArray.reverse()\n        })\n      }).then(response => response.json()).then(responseData => {\n        console.log(responseData);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\",\n    width: 280,\n    height: 280,\n    onMouseDown: startDrawing,\n    onMouseUp: finishDrawing,\n    onMouseMove: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Penciltool, \"0TanOhZ7IvG+OpPYxXjbYX8AcvQ=\");\n_c = Penciltool;\nexport default Penciltool;\nvar _c;\n$RefreshReg$(_c, \"Penciltool\");","map":{"version":3,"names":["React","useLayoutEffect","useState","useRef","useEffect","jsxDEV","_jsxDEV","pos","x","y","Penciltool","_s","lines","setLines","drawing","setDrawing","contextRef","canvas","document","getElementById","ctx","getContext","fillStyle","clearRect","width","height","lineCap","strokeStyle","lineWidth","current","forEach","line","points","point","index","moveTo","lineTo","stroke","startDrawing","event","clientX","clientY","rect","getBoundingClientRect","left","top","prevLines","finishDrawing","draw","lastLine","length","newPoints","newLines","convertCanvasToImageArray","imageData","getImageData","data","imageArray","i","r","g","b","grayscale","Math","round","push","rmesizedIageArray","handleMouseUp","console","log","fetch","method","headers","body","JSON","stringify","csvData","reverse","then","response","json","responseData","catch","error","addEventListener","removeEventListener","id","onMouseDown","onMouseUp","onMouseMove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jamesmcleish/projects/MNIST-number-guesser/frontend/src/components/PencilTool/PencilTool.js"],"sourcesContent":["import React, { useLayoutEffect, useState, useRef, useEffect } from 'react';\n\nvar pos = { x: 0, y: 0 };\n\nconst Penciltool = () => {\n  const [lines, setLines] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const contextRef = useRef(null);\n  \n\n  useLayoutEffect(() => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n\n    ctx.fillStyle = 'black';\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 45;\n    contextRef.current = ctx;\n\n    lines.forEach((line) => {\n      line.points.forEach((point, index) => {\n        if (index === 0) {\n          contextRef.current.moveTo(point.x, point.y);\n        } else {\n          contextRef.current.lineTo(point.x, point.y);\n        }\n      });\n      contextRef.current.stroke();\n    });\n  }, [lines]);\n\n  const startDrawing = (event) => {\n    setDrawing(true);\n    const { clientX, clientY } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top;  // Adjust y coordinate based on canvas position\n\n    setLines((prevLines) => [...prevLines, { points: [pos] }]);\n  };\n\n  const finishDrawing = () => {\n    setDrawing(false);\n  };\n\n  const draw = (event) => {\n    if (!drawing) return;\n\n    const { clientX, clientY } = event;\n    const canvas = document.getElementById('canvas');\n    const rect = canvas.getBoundingClientRect();\n    pos.x = clientX - rect.left; // Adjust x coordinate based on canvas position\n    pos.y = clientY - rect.top;  // Adjust y coordinate based on canvas position\n\n    setLines((prevLines) => {\n      const lastLine = prevLines[prevLines.length - 1];\n      const newPoints = [...lastLine.points, pos];\n      const newLines = [...prevLines];\n      newLines[newLines.length - 1] = { points: newPoints };\n      return newLines;\n    });\n\n    contextRef.current.lineTo(pos.x, pos.y);\n    contextRef.current.stroke();\n  };\n\n  function convertCanvasToImageArray(canvas) {\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height).data;\n    const imageArray = [];\n    \n      for (let i = 0; i < imageData.length; i += 4) {\n        const r = imageData[i];\n        const g = imageData[i + 1];\n        const b = imageData[i + 2];\n        const grayscale = Math.round(0.2989 * r + 0.587 * g + 0.114 * b);\n        imageArray.push(grayscale/255);\n      }\n      \n  \n    return rmesizedIageArray;\n  }\n\n\n  useEffect(() => {\n    const handleMouseUp = () => {\n      const canvas = document.getElementById('canvas');\n      const imageArray = convertCanvasToImageArray(canvas);\n      console.log(imageArray[0])\n  \n      fetch('http://127.0.0.1:5000', { \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ csvData: imageArray.reverse() }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n  \n    document.addEventListener('mouseup', handleMouseUp);\n  \n    return () => {\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, []);  \n\n  return (\n    <canvas\n      id='canvas'\n      width={280}\n      height={280}\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={draw}\n    >\n    </canvas>\n  );\n};\n\nexport default Penciltool;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}