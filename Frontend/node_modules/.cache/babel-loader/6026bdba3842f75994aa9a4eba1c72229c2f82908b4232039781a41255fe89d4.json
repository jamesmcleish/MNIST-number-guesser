{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmcleish/projects/MNIST-number-guesser/frontend/src/components/app/app.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useRef } from 'react';\nimport PencilTool from '../PencilTool/PencilTool';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const pencilToolRef = useRef(null);\n  const clearWhiteboard = () => {\n    window.location.reload();\n  };\n  const canvasRef = useRef(null);\n  const sendImageToAPI = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n    const pixelArray = [];\n\n    // Extract the pixel data from the canvas\n    for (let i = 0; i < data.length; i += 4) {\n      pixelArray.push(data[i]);\n      pixelArray.push(data[i + 1]);\n      pixelArray.push(data[i + 2]);\n    }\n\n    // Create an object to send as JSON\n    const image = {\n      pixels: pixelArray,\n      width: canvas.width,\n      height: canvas.height\n    };\n    fetch('http://localhost:4000', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(image)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Draw a single digit number with your cursor and click the button below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"penciltool-container\",\n        children: /*#__PURE__*/_jsxDEV(PencilTool, {\n          ref: pencilToolRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendImageToAPI,\n        children: \"Predict Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearWhiteboard,\n        children: \"Clear Whiteboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TfsSw5L6hUrs00hkfUHUH+aYLqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","PencilTool","jsxDEV","_jsxDEV","App","_s","pencilToolRef","clearWhiteboard","window","location","reload","canvasRef","sendImageToAPI","canvas","current","context","getContext","imageData","getImageData","width","height","data","pixelArray","i","length","push","image","pixels","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/jamesmcleish/projects/MNIST-number-guesser/frontend/src/components/app/app.js"],"sourcesContent":["import './App.css';\nimport React, { useRef } from 'react';\nimport PencilTool from '../PencilTool/PencilTool';\n\nfunction App() {\n  \n  const pencilToolRef = useRef(null);\n\n  const clearWhiteboard = () => {\n    window.location.reload();\n  };\n\n  const canvasRef = useRef(null);\n\n  const sendImageToAPI = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n    const pixelArray = [];\n  \n    // Extract the pixel data from the canvas\n    for (let i = 0; i < data.length; i += 4) {\n      pixelArray.push(data[i]);\n      pixelArray.push(data[i + 1]);\n      pixelArray.push(data[i + 2]);\n    }\n  \n    // Create an object to send as JSON\n    const image = {\n      pixels: pixelArray,\n      width: canvas.width,\n      height: canvas.height,\n    };\n  \n    fetch('http://localhost:4000', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(image),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n  \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Draw a single digit number with your cursor and click the button below.</p>\n        <div className=\"penciltool-container\">\n          <PencilTool ref={pencilToolRef} />\n        </div>\n        <button onClick={sendImageToAPI}>Predict Number</button>\n        <button onClick={clearWhiteboard}>Clear Whiteboard</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}